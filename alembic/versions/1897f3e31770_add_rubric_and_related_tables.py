"""Add rubric and related tables

Revision ID: 1897f3e31770
Revises: b778475438dd
Create Date: 2025-10-29 05:26:09.691505

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  
import sqlmodel.sql.sqltypes 



# revision identifiers, used by Alembic.
revision: str = '1897f3e31770'
down_revision: Union[str, Sequence[str], None] = 'b778475438dd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rubric',
    sa.Column('created_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('student_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('grade_intensity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('criterion',
    sa.Column('created_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rubric_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rubric_id'], ['rubric.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('performance_level',
    sa.Column('created_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('rubric_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rubric_id'], ['rubric.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('criterion_level_descriptor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('criterion_id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('descriptor', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['criterion_id'], ['criterion.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['performance_level.id'], ),
    sa.PrimaryKeyConstraint('id', 'criterion_id', 'level_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('criterion_level_descriptor')
    op.drop_table('performance_level')
    op.drop_table('criterion')
    op.drop_table('rubric')
    # ### end Alembic commands ###
