"""Initial fresh migration

Revision ID: a54dbc52c117
Revises: 
Create Date: 2025-10-31 10:11:11.186204

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  
import sqlmodel.sql.sqltypes 



# revision identifiers, used by Alembic.
revision: str = 'a54dbc52c117'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('essay',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('graded_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rubric',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('student_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('grade_intensity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('essay_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('middle_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_last_name'), ['last_name'], unique=False)

    op.create_table('criterion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rubric_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rubric_id'], ['rubric.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('overall_essay_grade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('suggestion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('max_score', sa.Integer(), nullable=False),
    sa.Column('essay_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['essay_id'], ['essay.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('performance_level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('rubric_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rubric_id'], ['rubric.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('criterion_essay_grade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('feedback', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('suggestion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('overall_grade_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['overall_grade_id'], ['overall_essay_grade.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('criterion_level_descriptor',
    sa.Column('criterion_id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('descriptor', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['criterion_id'], ['criterion.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['performance_level.id'], ),
    sa.PrimaryKeyConstraint('criterion_id', 'level_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('criterion_level_descriptor')
    op.drop_table('criterion_essay_grade')
    op.drop_table('performance_level')
    op.drop_table('overall_essay_grade')
    op.drop_table('criterion')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_last_name'))
        batch_op.drop_index(batch_op.f('ix_users_first_name'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('rubric')
    op.drop_table('essay')
    # ### end Alembic commands ###
